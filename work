hi

class employee:
    def __init__(self, name, weeklyhours, rate, overtimeRate, weeklytaxcredit):
        self.name = name
        self.weeklyhours = weeklyhours
        self.rate = rate
        self.overtimeRate = overtimeRate
        self.weeklytaxcredit = weeklytaxcredit


    def computeWeeklyPay (self, hours):
        # if weekly hours is 35, rate is 11, overtimeRate is 15 and hours is 39 computeWeeklyPay
        # return 35 * 11 + 4 * 15 = 445
        if (hours > self.weeklyhours):
            return (int(self.weeklyhours) * int(self.rate)) + ((int(hours) - int(self.weeklyhours)) *  self.overtimeRate)
        else:
            return (int(self.weeklyhours) * int(self.rate))


    def computeTax(self, grossPay):
        if 0.4* int(grossPay) > int(self.weeklytaxcredit):
          return (0.4* int(grossPay)) - int(self.weeklytaxcredit)
        else:
          return (0.4* int(grossPay)) 

emp1 = employee('Paul',35,11,15,60);
grosspay=emp1.computeWeeklyPay(39);
tax=emp1.computeTax(445);
print(grosspay,tax);



import unittest

class TestEmployee(unittest.TestCase):

    def setUp(self):
        self.emp1 = employee('Navin', 35, 11, 15, 70)

    def test_computeWeeklyPay(self):
        grosspay = self.emp1.computeWeeklyPay(39)
        expected_value = 445
        self.assertEqual(int(grosspay), expected_value)

    def test_computeTax(self):
        tax = self.emp1.computeTax(445)
        expected_value = 108
        self.assertEqual(int(tax), expected_value)

unittest.main(argv=[''], verbosity=2, exit=False)
